<beast version='2.0'
       namespace='beastfx.app.beauti:beast.base.core:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.base.util:beast.base.evolution.datatype.Nucleotide:beast.base.evolution.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.base.evolution:beast.base.inference.distribution:beastfx.app.inputeditor'
	templateinfo='template for tree model adequacy analysis'>

<map name='connect' reserved='true'>beastfx.app.inputeditor.BeautiConnector</map>
<map name='subtemplate' reserved='true'>beastfx.app.inputeditor.BeautiSubTemplate</map>
<map name='Uniform'>beast.base.inference.distribution.Uniform</map>
<map name='Normal'>beast.base.inference.distribution.Normal</map>
<map name='OneOnX'>beast.base.inference.distribution.OneOnX</map>
<map name='LogNormal'>beast.base.inference.distribution..LogNormalDistributionModel</map>
<map name='Exponential'>beast.base.inference.distribution.Exponential</map>
<map name='Gamma'>beast.base.inference.distribution.Gamma</map>
<map name='Beta'>beast.base.inference.distribution.Beta</map>
<map name='LaplaceDistribution'>beast.base.inference.distribution.LaplaceDistribution</map>
<map name='InverseGamma'>beast.base.inference.distribution.InverseGamma</map>
<map name='prior'>beast.base.inference.distribution.Prior</map>

    <beauticonfig spec='BeautiConfig'
        inputLabelMap='beast.base.inference.MCMC.operator=Operators,
	        beast.base.inference.MCMC.logger=Loggers,
			beast.base.evolution.sitemodel.SiteModel.mutationRate =Substitution Rate'
        inlinePlugins ='beast.base.inference.MCMC.distribution,
            beast.base.evolution.sitemodel.SiteModel.substModel,
            beast.base.evolution.tree.coalescent.ExponentialGrowth,
            beast.base.evolution.tree.coalescent.ConstantPopulation,
            beast.base.evolution.tree.coalescent.Coalescent,
            beast.base.inference.State.stateNode'
        collapsedPlugins ='beast.base.inference.MCMC.logger'
        suppressPlugins = 'beast.base.inference.MCMC.operator,
    		beast.base.inference.MCMC.operatorschedule,
	        beast.base.evolution.tree.coalescent.Coalescent.treeIntervals,
	        beast.base.evolution.tree.coalescent.Coalescent.tree,
	        beast.base.inference.MCMC.state,
	        beast.base.inference.MCMC.distribution,
	        beast.base.inference.MCMC.init,
			modeladequacy.TreeModelAdequacy.state,
			modeladequacy.TreeModelAdequacy.distribution,
			modeladequacy.TreeModelAdequacy.init,
			modeladequacy.TreeModelAdequacy.operator,
			modeladequacy.TreeModelAdequacy.operatorschedule,
    		beast.base.evolution.speciation.BirthDeathGernhard08Model.treeIntervals,
	        beast.base.evolution.speciation.BirthDeathGernhard08Model.tree,
	        beast.base.evolution.speciation.BirthDeathGernhard08Model.sampleProbability,
			beast.base.evolution.speciation.YuleModel.treeIntervals,
			beast.base.evolution.speciation.YuleModel.useTipDates,
			beast.base.evolution.speciation.YuleModel.tree,
	        beast.base.evolution.tree.Tree,
	        beast.base.evolution.tree.Tree.trait,
	        beast.base.evolution.tree.Tree.taxa,
	        beast.base.evolution.tree.Tree.taxonset,
	        beast.base.evolution.tree.coalescent.RandomTree.trait,
	        beast.base.evolution.tree.coalescent.RandomTree.initial,
	        beast.base.evolution.tree.coalescent.RandomTree.taxa,
	        beast.base.evolution.tree.coalescent.RandomTree.taxonset,
	        beast.base.evolution.tree.coalescent.RandomTree.estimate,
	        beast.base.evolution.tree.TreeParser.initial,
	        beast.base.evolution.tree.TreeParser.taxa,
	        beast.base.evolution.tree.TreeParser.taxonset,
	        beast.base.evolution.tree.TreeParser.trait,
	        beast.base.evolution.tree.TreeParser.estimate,
	        beast.base.evolution.tree.ClusterTree.initial,
	        beast.base.evolution.tree.ClusterTree.taxa,
	        beast.base.evolution.tree.ClusterTree.taxonset,
	        beast.base.evolution.tree.ClusterTree.trait,
	        beast.base.evolution.tree.ClusterTree.estimate,
	        beast.base.evolution.substitutionmodel.WAG.rates,
	        beast.base.evolution.substitutionmodel.WAG.frequencies,
	        beast.base.evolution.substitutionmodel.JTT.rates,
	        beast.base.evolution.substitutionmodel.JTT.frequencies,
	        beast.base.evolution.substitutionmodel.Blosum62.rates,
	        beast.base.evolution.substitutionmodel.Blosum62.frequencies,
	        beast.base.evolution.substitutionmodel.Dayhoff.rates,
	        beast.base.evolution.substitutionmodel.Dayhoff.frequencies,
	        beast.base.evolution.substitutionmodel.CPREV.rates,
	        beast.base.evolution.substitutionmodel.CPREV.frequencies,
	        beast.base.evolution.substitutionmodel.MTREV.rates,
	        beast.base.evolution.substitutionmodel.MTREV.frequencies,
	        beast.base.evolution.substitutionmodel.GTR.rates,
	        beast.base.evolution.substitutionmodel.JukesCantor.frequencies,
            beast.base.inference.distribution.Prior.x,
            beast.base.evolution.tree.MRCAPrior.tree,
            beast.base.evolution.tree.MRCAPrior.monophyletic,
            beast.base.evolution.tree.MRCAPrior.taxonset,
            beast.base.evolution.branchratemodel.UCRelaxedClockModel.tree,
            beast.base.evolution.branchratemodel.UCRelaxedClockModel.rateCategories,
			beast.base.evolution.branchratemodel.UCRelaxedClockModel.distr,
            beast.base.evolution.branchratemodel.RandomLocalClockModel.tree,
            beast.base.evolution.branchratemodel.RandomLocalClockModel.meanRate,
            beast.base.evolution.branchratemodel.RandomLocalClockModel.indicators,
            beast.base.evolution.operator.ScaleOperator.indicator,
	        beast.base.inference.Operator.weight,
            beast.base.inference.Logger.model,
            beast.base.evolution.tree.coalescent.BayesianSkyline.treeIntervals,
            beast.base.evolution.tree.coalescent.BayesianSkyline.groupSizes,
            beast.base.evolution.tree.coalescent.BayesianSkyline.popSizes,
            beast.base.evolution.speciation.YuleModel.originHeight
            '
        buttonLabelMap='beast.app.beauti.BeautiInitDlg.&gt;&gt; details=Edit parameters'
    >
        <!--disableMenus='Mode'-->

        <panel spec='BeautiPanelConfig' panelname="Partitions" tiptext="Data Partitions"
            path='distribution/distribution[id="likelihood"]/distribution/data'
            hasPartitions="none" icon='2220.png.x' forceExpansion='FALSE'
            type='beast.base.evolution.alignment.Alignment'
        />
		<mergepoint id='aux-partitions-panels'/>
        
		<mergepoint id='aux-initilisation-panels'/>

		<panel spec='BeautiPanelConfig' panelname="Priors" tiptext="Other priors"
            path='distribution/distribution[id="prior"]/distribution'
            hasPartitions="none" icon='7.png.x' forceExpansion='TRUE_START_COLLAPSED'
            type='beast.base.inference.Distribution'
        />
		<mergepoint id='aux-priors-panels'/>

		<panel spec='BeautiPanelConfig' panelname="Operators" tiptext="MCMC Operator details"
            path='operator'
            hasPartitions="none" icon='8.png.x' forceExpansion='TRUE_START_COLLAPSED'
            isVisible='false' buttonStatus='ADD_ONLY'
        />
		<mergepoint id='aux-operators-panels'/>

		<panel spec='BeautiPanelConfig' panelname="MCMC" tiptext="MCMC parameters"
            path=''
            hasPartitions="none" icon='9.png.x' forceExpansion='TRUE'
        />
		<mergepoint id='aux-panels'/>

		<alignmentProvider id="Import Fixed Tree" spec='modeladequacy.app.beauti.BeautiFixedTreeAlignmentProvider' template='@FixedTreePartitionTemplate'/>


        <partitiontemplate id='FixedTreePartitionTemplate' spec='BeautiSubTemplate' class='modeladequacy.base.evolution.likelihood.FixedTreeLikelihood' mainid='mcmc'>
<![CDATA[
            <plugin spec='modeladequacy.base.evolution.likelihood.FixedTreeLikelihood' id="treeLikelihood.$(n)">
                <data idref="data"/>
                <tree idref="Tree.t:$(n)"/>
                <siteModel spec='modeladequacy.base.evolution.sitemodel.FixedSiteModel' id="FixedSiteModel.s:$(n)" gammaCategoryCount='0' proportionInvariant="0.0" mutationRate="1.0" shape="1.0"/>
                <branchRateModel spec='modeladequacy.base.evolution.branchratemodel.FixedClockModel' id='FixedClock.c:$(n)'>
                	<clock.rate spec="parameter.RealParameter" estimate="false" value="1.0"/>
                </branchRateModel>
            </plugin>

            <taxonset id='TaxonSet.$(n)' spec='beast.base.evolution.alignment.TaxonSet' alignment='@$(n)' />

            <logger id='treelog.t:$(n)' spec='beast.base.inference.Logger' logEvery="1000" fileName="$(tree).trees" mode='tree'>
                    <log id='TreeWithMetaDataLogger.t:$(n)' spec='beast.base.evolution.TreeWithMetaDataLogger' tree='@Tree.t:$(n)'>
                    </log>
            </logger>


            <!-- default tree prior -->
            <distribution id="CoalescentConstant.t:$(n)" spec="Coalescent">
                <treeIntervals spec="beast.base.evolution.tree.TreeIntervals" id='TreeIntervals.t:$(n)' tree='@Tree.t:$(n)'/>
                <populationModel spec="ConstantPopulation" id='ConstantPopulation.t:$(n)'>
                     <parameter name="popSize" id="popSize.t:$(n)" value='0.3' estimate='true'/>
                 </populationModel>
            </distribution>

  		    <operator id='PopSizeScaler.t:$(n)' spec='ScaleOperator' scaleFactor="0.75" weight="3" parameter="@popSize.t:$(n)"/>
	        <prior id='PopSizePrior.t:$(n)' x='@popSize.t:$(n)'><distr spec="OneOnX"/></prior>
]]>
            <connect srcID='treeLikelihood.$(n)'            targetID='likelihood' inputName='distribution' if="isInitializing"/>
            <connect srcID='CoalescentConstant.t:$(n)'      targetID='prior' inputName='distribution' if="isInitializing"/>
			<connect method="beastfx.app.inputeditor.SiteModelInputEditor.customConnector"/>

            <connect srcID='treelog.t:$(n)'                 targetID='mcmc' inputName='logger' if='inposterior(Tree.t:$(n))'/>


			<mergepoint id='aux-partitiontemplate'/>
        </partitiontemplate>

		

		<mergepoint id='substModelTemplates'/>
		<mergepoint id='clockModelTemplates'/>
		<mergepoint id='treePriorTemplatesX'/>
        <mergepoint id='parametricDistributions'/>

    </beauticonfig>


	<mergepoint id='misc'/>

    
<!--
<operator spec='DeltaExchangeOperator' id='FixMeanRatesOperator' weight='2' delta='0.75'/>
-->

<!-- framework for main model -->

    <run spec="modeladequacy.TreeModelAdequacy" id="mcmc" chainLength="1110000" master="your_master_file">

        <state storeEvery='5000' id='state'>
        </state>

        <distribution spec="beast.base.inference.CompoundDistribution" id="posterior">
            <distribution spec="beast.base.inference.CompoundDistribution" id="prior">
				<mergepoint id='aux-priors'/>
            </distribution>
            <distribution spec="beast.base.inference.CompoundDistribution" id="likelihood" useThreads="true">
				<mergepoint id='aux-likelihoods'/>
            </distribution>
        </distribution>

        <logger id='tracelog' logEvery="10000" fileName="beast.log" sort="smart" sanitiseHeaders='true'>
	        <model idref='posterior'/>
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
        </logger>

        <logger id='screenlog' logEvery="10000">
	        <!--model idref='posterior'/-->
            <log idref="posterior"/>
      	    <ESS spec='beast.base.inference.util.ESS' name='log' arg="@posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
        </logger>
    </run>

</beast>

