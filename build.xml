<!-- Build TMA. It is also used by Hudson TMA project. JUnit test is available for this build. -->
<project basedir="." default="package" name="BUILD_TMA">
	<description>
	    Build TMA. 
            Also used by Hudson TMA project. 
	    JUnit test is available for this build.
	    $Id: build_TMA.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="srcTMA" location="src" />
	<property name="buildTMA" location="build" />
	<property name="libTMA" location="lib" />
	<property name="release_dir" value="release" />
	<property name="distTMA" location="${buildTMA}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="libBeast2" location="${beast2path}/lib" />
	<property name="srcBeast2" location="${beast2path}/src" />
	<property name="beast2classpath" location="${beast2path}/build" />
    <property name="BeastFXpath" location="../BeastFX" />
 	<property name="Add_on_dir" value="${release_dir}/add-on" />
	
	<property name="buildMODEL_SELECTION" location="../model-selection/build"/>
	<property name="buildBEAST_LABS" location="../BEASTLabs/build"/>


    <import file="${beast2path}/build.xml" />

	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="report" value="${buildTMA}/junitreport"/>

	<path id="classpath">
        <pathelement path="${buildTMA}"/>
		<fileset dir="${libBeast2}" includes="antlr-runtime-4.7.jar"/>
		<fileset dir="${libBeast2}" includes="junit-4.8.2.jar"/>
		<fileset dir="${libBeast2}" includes="beagle.jar"/>
        <fileset dir="${libBeast2}" includes="jam.jar"/>
        <fileset dir="${libBeast2}" includes="ntlr-runtime-4.5.jar"/>
        <fileset dir="${libBeast2}" includes="commons-math3-3.1.1.jar"/>
        <fileset dir="${libBeast2}" includes="colt.jar"/>
        <fileset dir="${libBeast2}" includes="debug-1.0.jar"/>
        <pathelement path="../beast2/build"/>
        <pathelement path="../BEASTLabs/build"/>
        <pathelement path="../TreeStat2/build"/>
        <pathelement path="${buildBEAST_LABS}"/>
        <pathelement path="${beast2classpath}"/>
        <pathelement path="${BeastFXpath}/build"/>
	</path>

	<!-- start -->
	<target name="initTMA">
		<echo message="${ant.project.name}: ${ant.file}" />
		<available file="./version.xml" property="versionAvailable"/>
        	<fail unless="versionAvailable">
              ** Required file version.xml does not exist. **
	        </fail>

        <!-- Read package name and version from xml file -->
        <xmlproperty file="./version.xml" prefix="fromVersionFile" />
        <property name="TMAVersion" value="${fromVersionFile.package(version)}" />
	</target>

	<target name="cleanTMA">
    	<delete dir="${buildTMA}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_TMA" depends="cleanTMA,compile-allTMA,junitTMA"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_TMA" depends="cleanTMA,compile-allTMA,junitTMA,dist_all_TMA"
        description="Clean and Build all run-time stuff">
	</target>


	<!-- No JUnit Test, clean previous build, compile Java source code, and make the TMA.jar and beauti.jar -->
	<target name="build_jar_all_TMA_NoJUnitTest" depends="cleanTMA,compile-allTMA,dist_all_TMA"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-allTMA" depends="initTMA,compile-all">


	    <!-- Capture the path as a delimited property using the refid attribute -->
	    <property name="myclasspath" refid="classpath"/>
	    <!-- Emit the property to the ant console -->
	    <echo message="Classpath = ${myclasspath}"/>

		<mkdir dir="${buildTMA}" />

		<!-- Compile the java code from ${srcTMA} into ${buildTMA} /bin -->
		<javac srcdir="${srcTMA}" destdir="${buildTMA}" classpathref="classpath" 
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="256m">
			<include name="**/**" />
		</javac>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the beast.jar and beauti.jar -->
	<target name="dist_all_TMA" depends="compile-allTMA" description="create TMA jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${distTMA}" />

		<!-- Put everything in ${buildTMA} into the beast.jar file -->
		<jar jarfile="${distTMA}/TMA.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_BEAST}" />
			</manifest>
			<fileset dir="${buildTMA}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${buildMODEL_SELECTION}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${buildBEAST_LABS}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${beast2classpath}">
				<include name="**/*.class" />
				<include name="**/*.properties" />
				<include name="**/*.png" />
			</fileset>
            <zipgroupfileset dir="${lib}" includes="jam.jar" />
            <zipgroupfileset dir="${lib}" includes="beagle.jar" />
            <zipgroupfileset dir="${lib}" includes="colt.jar" />
            <zipgroupfileset dir="${lib}" includes="commons-math3-3.1.1.jar" />
            <zipgroupfileset dir="${lib}" includes="antlr-runtime-4.7.jar"/>
		</jar>
		<jar jarfile="${distTMA}/TMA.src.jar">
			<fileset dir="${srcTMA}">
				<include name="**/*.java" />
				<include name="beast/**/*.png" />
				<include name="beast/**/*.xsl" />
			</fileset>
        </jar>
		<jar jarfile="${distTMA}/TMA.package.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildTMA}">
				<include name="**/*.class" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_TMA">
		<java jar="${distTMA}/TMA.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junitTMA">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${buildTMA}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srcTMA}">
                    <include name="test/**/*Test.java"/>                                         
				</fileset>
				<fileset dir="${srcBeast2}">
                    <include name="test/beast/integration/**/*Test.java"/>                                         
                    <exclude name="test/beast/integration/**/ResumeTest.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>


	<target name="addon" depends="package"/>

	<target name="package"
	        depends="build_jar_all_TMA_NoJUnitTest"
	        description="release BEAST 2 add-on version of TMA">

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/examples" />
		<mkdir dir="${Add_on_dir}/templates" />
		<mkdir dir="${Add_on_dir}/master" />

		<copy todir="${Add_on_dir}">
			<fileset file="version.xml"/>
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset file="README"/>
		</copy>
		<copy todir="${Add_on_dir}/examples">
			<fileset dir="examples" />
		</copy>
		<copy todir="${Add_on_dir}/lib">
			<fileset dir="${distTMA}" includes="TMA.package.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset dir="${distTMA}" includes="TMA.src.jar" />
		</copy>
		<copy todir="${Add_on_dir}/master">
			<fileset dir="master" />
		</copy>
		<copy todir="${Add_on_dir}/templates">
			<fileset file="templates/TreeModelAdequacy.xml" />
			<fileset file="templates/TreePriorsMA.xml" />
		</copy>

		<jar jarfile="${distTMA}/TMA.v${TMAVersion}.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
		<echo message="Add-on version v${TMAVersion} release is finished." />
	</target>

</project>
